@import url('https://fonts.googleapis.com/css2?family=Roboto&family=Source+Sans+Pro:ital@1&display=swap');
/* ======================== */
/*      Variables           */
/* ======================== */

:root {
  // Colors
  --clr-primary: 45, 94%, 56%;
  --clr-primary--tint: 45, 69%, 71%;
  --clr-dark: 180, 20%, 2%;
  --clr-dark--tint: 200, 25%, 5%;
  --clr-gray: 200, 23%, 10%;
  --clr-light-gray: 200, 23%, 11%;
  --clr-white: 0, 0%, 100%;
  --clr-white--shade: 0, 0%, 85%;
  --clr-error: 4, 100%, 61%;
  --clr-warning: 41, 100%, 62%;

  // Font sizes
  --fs-800: 3rem;
  --fs-700: 2.5rem;
  --fs-600: 2rem;
  --fs-500: 1.3rem;
  --fs-400: 1.125rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  // Font-families
  --ff-roboto: 'Roboto', sans-serif;
  --ff-sans: 'Source Sans Pro', sans-serif;
}

/* ======================== */
/*      CSS Reset           */
/* ======================== */

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

ul {
  padding: 0;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  background: #{'hsl(var(--clr-dark))'};
  background-image: url(../img/bg-login.jpg);
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh;

  overflow-x: hidden;
  font-family: var(--ff-sans);
  font-size: var(--fs-400);
  line-height: 1.5;
  color: #{'hsl(var(--clr-white))'};
  text-rendering: optimizeSpeed;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  display: block;
  max-width: 100%;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

a {
  text-decoration: none;
  color: unset;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    scroll-behavior: auto !important;
    transition-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
  }
}

th {
  font-weight: 400;
}

[hidden] {
  display: none;
}

.material-icons {
  vertical-align: middle;
  font-size: inherit;
}

::-webkit-scrollbar {
  height: 10px;
  width: 10px;
}

::-webkit-scrollbar-track {
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: #{'hsl(var(--clr-light-gray))'};
}

@media screen and (max-width: 769px) {
  ::-webkit-scrollbar {
    height: 4px;
    width: 4px;
  }

  ::-webkit-scrollbar-track {
    border-radius: 2px;
  }

  ::-webkit-scrollbar-thumb {
    border-radius: 2px;
    background: #{'hsl(var(--clr-light-gray))'};
  }
}

/* ======================== */
/*    Utility classes       */
/* ======================== */

// Display classes
.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.flex-column {
  display: flex;
  flex-direction: column;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.grid-container--storage {
  --gap: 0;
}

.vertical-center {
  display: flex;
  align-items: center;
}

.flow>*:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}

.flow--space--small {
  --flow-space: .75rem;
}

.flow--horizontal>*:where(:not(:first-child)) {
  margin-left: var(--flow-space, 1rem);
}

.container {
  max-width: 80rem;
  padding-inline: 2em;
  margin-inline: auto;
}

// Color classes
.bg-primary {
  background: #{'hsl(var(--clr-primary))'};
}

.bg-dark {
  background: #{'hsl(var(--clr-dark))'};
}

.bg-dark--tint {
  background: #{'hsl(var(--clr-dark--tint))'};
}

.text-white {
  color: #{'hsl(var(--clr-white))'};
}

.text-white--shade {
  color: #{'hsl(var(--clr-white--shade))'};
  ;
}

.text-primary {
  color: #{'hsl(var(--clr-primary))'};
}

.text-primary--tint {
  color: #{'hsl(var(--clr-primary--tint))'};
}

.text-dark {
  color: #{'hsl(var(--clr-dark))'};
}

.text-warning {
  color: #{'hsl(var(--clr-warning))'};
}

.text-error {
  color: #{'hsl(var(--clr-error))'};
}

// Typography
.ff-roboto {
  font-family: var(--ff-roboto);
}

.ff-sans {
  font-family: var(--ff-sans);
}

.letter-spacing-1 {
  letter-spacing: 1px;
}

.letter-spacing-2 {
  letter-spacing: 2px;
}

.letter-spacing-3 {
  letter-spacing: 4px;
}

.uppercase {
  text-transform: uppercase;
}

.capitalize {
  text-transform: capitalize;
}

.fs-800 {
  font-size: var(--fs-800);
}

.fs-700 {
  font-size: var(--fs-700);
}

.fs-600 {
  font-size: var(--fs-600);
}

.fs-500 {
  font-size: var(--fs-500);
}

.fs-400 {
  font-size: var(--fs-400);
}

.fs-300 {
  font-size: var(--fs-300);
}

.fs-200 {
  font-size: var(--fs-200);
}

.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.fw-600 {
  font-weight: 600;
}

/* ======================== */
/*       Google Icons       */
/* ======================== */

h1>.material-icons,
h2>.material-icons {
  margin-right: 0.25em;
}

p>.material-icons {
  margin-right: 0.5em;
}

/* ======================== */
/*        Components        */
/* ======================== */

// Navbar
.nav {
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  background: #{'hsl(var(--clr-dark--tint), .98)'};
  padding: 0.5rem 2.25rem;
  padding: 1rem 2rem;
  box-shadow: 0 0 12px 4px #{'hsl(var(--clr-dark), .8)'};
}

.nav-right {
  --gap: 0;
  --flow-space: 2.25rem;
  align-items: center;
}

.nav-right__links {
  --gap: 0;
  --flow-space: 2.25rem;
  margin: 0;
  list-style: none;
}

.nav-item:hover,
.nav-item:focus {
  color: #{'hsl(var(--clr-white))'};
}

@media screen and (max-width: 800px) {
  .nav {
    flex-direction: column;
  }

  .nav-right {
    justify-content: center;
    align-items: center;
  }
}

@media screen and (max-width: 625px) {
  .nav-right {
    --flow-space: 0rem;
    --gap: 1rem;
    flex-direction: column;
  }
}

// Grid container (for page content structure)
.grid-container {
  --gap: 2rem;
  padding: 0.5rem 2rem;
}

@media screen and (max-width: 800px) {
  .grid-container {
    padding: 0.5rem 0;
  }
}

// Button
.btn {
  display: block;
  border: none;
  border-radius: 1em;
  background: #{'hsl(var(--clr-primary))'};
  padding: 0.5em 2em;
  cursor: pointer;
}

.btn--round {
  border-radius: 3em;
}

.btn--small {
  padding: 0.25em 1em;
}

.btn:hover {
  background: #{'hsl(var(--clr-primary), .9)'};
}

.btn:focus {
  background: #{'hsl(var(--clr-primary), .7)'};
}

.btn--light-gray {
  background: #{'hsl(var(--clr-white), .15)'};
}

.btn--light-gray:hover {
  background: #{'hsl(var(--clr-white), .20)'};
}

.btn--light-gray:focus {
  background: #{'hsl(var(--clr-white), .25)'};
}

// Card
.card {
  --flow-space: 2rem;
  border-radius: 0.5rem;
  background: #{'hsl(var(--clr-dark--tint), .98)'};
  max-width: 100%;
  overflow: hidden;
  padding: 1rem 2rem 1.5rem;
  box-shadow: 0 0 12px 4px #{'hsl(var(--clr-dark), .8)'};
}

.card-content {
  margin-top: 0.5rem;
}

.card-content-value {
  margin-left: 0.25em;
  font-weight: 400;
}

.card-content--orders {
  --gap: 0.25em;
}

@media screen and (max-width: 800px) {
  .card {
    padding: 1rem 1rem 1.5rem;
  }
}

// Highlighted Row
.highlighted-row {
  justify-content: space-between;
  align-items: center;
  border-radius: 0.25em;
  width: 100%;
  padding: 0.1em 0.3em;
}

.highlighted-row__icon {
  display: none !important;
}

.highlighted-row:hover {
  background: #{'hsl(var(--clr-gray))'};
}

.highlighted-row:hover .highlighted-row__icon {
  display: block !important;
}

// Filter
.table-filters {
  --gap: 1rem;
  max-width: 100%;
  overflow-x: auto;
  padding: 0.5rem 0.5rem 1rem;
  white-space: nowrap;
}

@media screen and (max-width: 769px) {
  .table-filters {
    margin-bottom: 0.25em;
  }
}

// Table
.table-container {
  max-height: 75vh;
  height: 75vh;
  width: 100%;
  overflow: auto;
}

@media screen and(max-width: 769px) {
  .table-container {
    height: 100vh;
  }
}

.table {
  overflow: auto;
  border-spacing: 0 .5rem;
}

.table thead th {
  position: sticky;
  top: -2px;
  text-transform: capitalize;
}

.table th {
  background: #{'hsl(var(--clr-dark--tint), 1)'};
}

.table th,
.table td {
  padding-block: .25rem;
  text-align: center;
}

.table thead th {
  padding-inline: 1rem;
}

$onHoverRadius: .25em;

.table tr:hover td {
  background: #{'hsl(var(--clr-gray))'};
}

.table tr:hover td:first-child,
.table tr th:first-child {
  border-start-start-radius: $onHoverRadius;
  border-end-start-radius: $onHoverRadius;
}

.table tr:hover td:last-child,
.table tr th:last-child {
  border-start-end-radius: $onHoverRadius;
  border-end-end-radius: $onHoverRadius;
}

.table td:not(:last-child) {
  border-right: 1px solid #{'hsl(var(--clr-white), .05)'};
}

/* ======================== */
/*         Imports          */
/* ======================== */
@import "_dashboard.scss";
@import "_login.scss";
@import "_table-columns-sizes.scss";